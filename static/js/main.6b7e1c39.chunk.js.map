{"version":3,"sources":["components/AppBar/Navigation.js","components/UserMenu/default.jpg","components/UserMenu/UserMenu.js","components/AppBar/AuthNav.js","components/AppBar/AppBar.js","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","App.js","reportWebVitals.js","redux/contacts/contact-reducer.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-slice.js","redux/auth/auth-selectors.js","components/AppBar/AppBar.module.css","redux/contacts/contact-actions.js"],"names":["styles","link","display","textDecoration","padding","fontWeight","color","marginLeft","activeLink","Navigation","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","to","exact","style","activeStyle","container","alignItems","marginRight","avatar","borderRadius","name","UserMenu","dispatch","useDispatch","getUserName","defaultAvatar","src","alt","width","type","shape","size","htmlType","onClick","authOperations","logOut","actions","contactsClear","AuthNav","AppBar","className","header","PrivateRoute","component","redirectTo","children","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fetchCurrentUser","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","updateContactRequest","updateContactSuccess","updateContactError","changeFilter","items","createReducer","_","payload","state","map","contact","id","number","filter","loading","error","combineReducers","userPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persStore","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","thunkAPI","a","post","data","rejectWithValue","message","logIn","operations","getState","persistedToken","get","authSlice","createSlice","initialState","user","email","isLoadingToken","errorAuth","extraReducers","fulfilled","action","rejected","pending","getIsLoadingToken","getErrorAuth","module","exports","contactActions","createAction"],"mappings":"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","file":"static/js/main.6b7e1c39.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\nimport { useSelector } from 'react-redux';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n    marginLeft: '15px',\n  },\n  activeLink: {\n    color: '#1a5ef3ec',\n  },\n};\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Main\n      </NavLink>\n\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          style={styles.link}\n          activeStyle={styles.activeLink}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/default.43901eb7.jpg\";","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport actions from '../../redux/contacts/contact-actions';\n//import { fetchAllContacts } from '../../redux/contacts/contact-operations';\n//import { getContacts } from '../../redux/contacts/contact-selectors';\nimport defaultAvatar from './default.jpg';\n\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: '35px',\n    marginRight: '35px',\n  },\n  avatar: {\n    marginRight: 4,\n    borderRadius: '50%',\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n  const avatar = defaultAvatar;\n  //const contactItems = useSelector(getContacts);\n\n  const handleLogout = () => {\n    //console.log('before disp logout');\n    dispatch(authOperations.logOut());\n    //console.log('after disp logout');\n    dispatch(actions.contactsClear());\n  };\n\n  return (\n    <div style={styles.container}>\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>Welcome, {name}</span>\n      <Button\n        type=\"primary\"\n        shape=\"default\"\n        size={'small'}\n        htmlType=\"button\"\n        onClick={handleLogout}\n      >\n        Logout\n      </Button>\n    </div>\n  );\n}\n","import { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#1a5ef3ec',\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Register\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\nimport Navigation from './Navigation';\nimport UserMenu from '../UserMenu/UserMenu';\nimport AuthNav from './AuthNav';\nimport styles from './AppBar.module.css';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  //console.log('styles,: ', styles);\n\n  return (\n    <header className={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\n\nexport default function PrivateRoute({\n  component: Component,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\n\nexport default function PublicRoute({\n  redirectTo = '/',\n  restricted = false,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","//import { useEffect, useState } from 'react';\n//import { v4 as uuidv4 } from 'uuid';\nimport { Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, Suspense, lazy } from 'react';\n\nimport AppBar from './components/AppBar/AppBar';\n\nimport { authOperations } from './redux/auth';\n\nimport './App.css';\n\nimport PrivateRoute from './components/Routes/PrivateRoute';\nimport PublicRoute from './components/Routes/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <AppBar />\n      <Switch>\n        <Suspense fallback={<h2> Loading...</h2>}>\n          <PublicRoute exact path=\"/\">\n            <HomeView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n            <RegisterView />\n          </PublicRoute>\n\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n            <LoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactsView />\n          </PrivateRoute>\n        </Suspense>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\n//import types from './contacts/contact-types';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contact-actions';\nconst {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  updateContactRequest,\n  updateContactSuccess,\n  updateContactError,\n  changeFilter,\n  contactsClear,\n} = actions;\n// {\n//   contacts: {\n//     items: [],\n//     filter: ''\n//   }\n// }\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => {\n    return payload;\n  },\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [updateContactSuccess]: (state, { payload }) =>\n    state.map(contact =>\n      contact.id === payload.id\n        ? { ...contact, number: payload.number }\n        : contact,\n    ),\n  [deleteContactSuccess]: (state, { payload }) => {\n    return state.filter(({ id }) => id !== payload);\n  },\n  [contactsClear]: state => {\n    //console.log('очищаю контакты только в стейте');\n    state = [];\n    return state;\n  },\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [updateContactRequest]: () => true,\n  [updateContactSuccess]: () => false,\n  [updateContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [updateContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n\n  [fetchContactRequest]: () => null,\n  [addContactRequest]: () => null,\n  [updateContactRequest]: () => null,\n  [deleteContactRequest]: () => null,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => {\n    return payload;\n  },\n});\n\nexport default combineReducers({\n  items,\n  loading,\n  error,\n  filter,\n});\n","//import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n//import logger from 'redux-logger';\n//import { composeWithDevTools } from 'redux-devtools-extension';   ---у тулкита под капотом\nimport { authReducer } from './auth';\nimport contactsReducer from './contacts/contact-reducer';\n//import { logger } from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst userPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(userPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development', //devTools: true -- it goes by default\n});\nconst persistor = persistStore(store);\n\nconst persStore = { store, persistor };\n\nexport default persStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate\n        loading={<h2>Data upload from LocalStorage...</h2>}\n        persistor={store.persistor}\n      >\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n//import { getContacts } from '../contacts/contact-selectors';\n\naxios.defaults.baseURL = 'http://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body: { name, email, password }\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = createAsyncThunk(\n  'auth/register',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  },\n);\n\n/*\n * POST @ /users/login\n * body: { email, password }\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = createAsyncThunk('auth/login', async (credentials, thunkAPI) => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n/*\n * POST @ /users/logout\n * headers: Authorization: Bearer token\n * После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    // TODO: Добавить обработку ошибки error.message\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      //console.log('Токена нет, уходим из fetchCurrentUser');\n      return thunkAPI.rejectWithValue('Token missing');\n    }\n\n    //console.log('Токен есть, ща как засетим СurrentUser:', persistedToken);\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      // TODO: Добавить обработку ошибки error.message\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  },\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isLoadingToken: true,\n  errorAuth: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.isLoadingToken = false;\n    },\n    [authOperations.register.rejected](state, action) {\n      state.errorAuth = action.payload;\n    },\n    [authOperations.register.pending](state, action) {\n      state.errorAuth = null;\n    },\n\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.isLoadingToken = false;\n    },\n    [authOperations.logIn.rejected](state, action) {\n      state.errorAuth = action.payload;\n    },\n    [authOperations.logIn.pending](state, action) {\n      state.errorAuth = null;\n    },\n\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n      state.isLoadingToken = false;\n    },\n    [authOperations.logOut.rejected](state, action) {\n      state.errorAuth = action.payload;\n    },\n    [authOperations.logOut.pending](state, action) {\n      state.errorAuth = null;\n    },\n\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isLoadingToken = true;\n    },\n\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isLoadingToken = false;\n    },\n\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isLoadingToken = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\n\nconst getUserName = state => state.auth.user.name;\n\nconst getIsLoadingToken = state => state.auth.isLoadingToken;\n\nconst getErrorAuth = state => state.auth.errorAuth;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n  getIsLoadingToken,\n  getErrorAuth,\n};\n\nexport default authSelectors;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2PSoY\"};","//import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n//import types from './contact-types';\n\n//const addContact = createAction(types.ADD,)\n\nconst fetchContactRequest = createAction('contact/fetchContactRequest');\nconst fetchContactSuccess = createAction('contact/fetchContactSuccess');\nconst fetchContactError = createAction('contact/fetchContactError');\n\nconst addContactRequest = createAction('contact/addContactRequest');\nconst addContactSuccess = createAction('contact/addContactSuccess');\nconst addContactError = createAction('contact/addContactError');\n\nconst updateContactRequest = createAction('contact/updateContactRequest');\nconst updateContactSuccess = createAction('contact/updateContactSuccess');\nconst updateContactError = createAction('contact/updateContactError');\n\nconst deleteContactRequest = createAction('contact/deleteContactRequest');\nconst deleteContactSuccess = createAction('contact/deleteContactSuccess');\nconst deleteContactError = createAction('contact/deleteContactError');\n\nconst changeFilter = createAction('contact/changeFilter');\n\nconst contactsClear = createAction('contacts/clear');\n\nconst contactActions = {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  updateContactRequest,\n  updateContactSuccess,\n  updateContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  contactsClear,\n};\n\nexport default contactActions;\n\n// const deleteContact = contactId => ({\n//     type: types.DELETE,\n//     payload: contactId,\n// });\n\n// const changeFilter = text => ({\n//     type: types.CHANGE_FILTER,\n//     payload: text,\n// });\n"],"sourceRoot":""}